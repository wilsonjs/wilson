@import '../assets/mixins.scss';

@mixin grid {
  display: grid;
  grid-auto-rows: min-content;
  grid-template-columns: 1fr;
  row-gap: 1rem;
  @include responsive(xs) {
    grid-template-columns: repeat(5, minmax(0, 1fr));
    column-gap: 1rem;
  }
}

.image {
  @include grid;
  margin-bottom: 1rem;
  @include responsive(xs) {
    margin-bottom: 3rem;
  }
  * {
    margin-bottom: 0;
  }
  h3 {
    grid-column: 1 / span 5;
  }
  img {
    height: 100%;
    width: 100%;
    object-fit: cover;
    border-radius: 0.75rem;
    grid-column: 1 / span 5;
    grid-row: 2 / span 1;
    max-height: 300px;
    @include responsive(xs) {
      height: 95%;
      margin-top: 2%;
      grid-column: 4 / span 2;
      grid-row: 2 / span 2;
      max-height: none;
    }
  }
  p:nth-child(3) {
    grid-column: 1 / span 5;
    @include responsive(xs) {
      grid-column: 1 / span 3;
      grid-row: 2 / span 1;
    }
  }
  p:nth-child(4) {
    margin-bottom: 0;
    grid-column: 1 / span 5;
    @include responsive(xs) {
      grid-column: 1 / span 3;
      grid-row: 3 / span 1;
    }
  }
}

.tldr {
  @include grid;
  margin-bottom: 6rem;

  @include responsive(xs) {
    grid-template-rows: auto auto 1fr;
  }

  * {
    margin-bottom: 0;
  }

  h3 {
    grid-column: 1 / span 5;
    grid-row: 2 / span 1;
    margin-top: 1rem;

    @include responsive(xs) {
      margin-top: 0;
      grid-column: 3 / span 3;
      grid-row: 1 / span 1;
    }
  }

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 0.75rem;
    grid-column: 1 / span 5;
    grid-row: 1 / span 1;

    @include responsive(xs) {
      grid-column: 1 / span 2;
      grid-row: 1 / span 3;
    }
  }

  p {
    // TODO: make larger font size that is always 2px larger than the normal, use that here!
    @include responsive(md) {
      font-size: 22px;
    }
    @include responsive(lg) {
      font-size: 24px;
    }
  }
  p:nth-child(3) {
    grid-column: 1 / span 5;
    grid-row: 3 / span 1;

    @include responsive(xs) {
      grid-column: 3 / span 3;
      grid-row: 2 / span 1;
    }
  }
  p:nth-child(4) {
    grid-column: 1 / span 5;
    grid-row: 4 / span 1;

    @include responsive(xs) {
      grid-column: 3 / span 3;
      grid-row: 3 / span 1;
    }
  }
}

.cols {
  column-count: 1;
  column-gap: 2rem;
  margin-bottom: 0;

  @include responsive(xs) {
    margin-bottom: 3rem;
  }
  @include responsive(md) {
    column-count: 2;
  }
}
