@import '../assets/mixins.scss';

.button {
  margin-right: -8px;
  @include responsive(xs) {
    margin-left: 0.4rem;
  }

  // menu toggle button doesn't work when javascript is disabled. to not
  // display it in that case, we default to display: none and inject a
  // small script tag into the head in wilson.config.js `injectHead` method
  // that will be executed when the page is loaded and sets the display
  // of this button to 'flex' with a higher specificity than the selector
  // generated from this scss module
  display: none;

  /* change bun size on hover and keyboard focus */
  html:not([data-state='menu']) &:hover div::before,
  html:not([data-state='menu']) &:hover div::after,
  html[data-whatinput='keyboard']:not([data-state='menu']) &:focus div::before,
  html[data-whatinput='keyboard']:not([data-state='menu']) &:focus div::after {
    width: 28px;
  }
  /* change patty size on hover and keyboard focus */
  &:hover span,
  html[data-whatinput='keyboard'] &:focus span {
    width: 16px;
  }

  /* @TODO the following part will be duplicated in both buttons */
  /**
   * scale buttons down on mobile portrait, use negative right margin to
   * compensate for the scaling effect
   */
  transform: scale(0.8);
  &:first-child {
    margin-right: -10px;
  }
  @include responsive(xs) {
    transform: none;
    &:first-child {
      margin-right: 0;
    }
  }
  background: transparent;
  border: none;
  padding: 0;
  width: var(--button-size);
  height: var(--button-size);
  justify-content: center;
  align-items: center;
  z-index: 3;
  cursor: pointer;
}

.buns {
  width: 28px;
  height: 28px;
  position: relative;
  &::before,
  &::after {
    content: '';
    position: absolute;
    height: 2px;
    left: 0;
    z-index: 1;
    background: var(--color-logo);
    transition: transform 0.2s ease-out, width 0.2s ease-out;
    will-change: transform, width;
  }
  &::before {
    top: 3px;
    width: 24px;
  }
  &::after {
    bottom: 3px;
    width: 18px;
  }

  &[data-open] {
    &::before {
      transform: translate3d(0, 10px, 0) rotate(45deg);
      width: 30px;
    }
    &::after {
      transform: translate3d(0, -10px, 0) rotate(135deg);
      width: 30px;
    }
  }
}

.patty {
  display: block;
  background: var(--color-logo);
  position: absolute;
  left: 0;
  top: 13px;
  width: 100%;
  height: 2px;
  transition: width 0.2s ease-out;
  will-change: width;

  &[data-open] {
    background: var(--color-bg-alt);
  }
}
